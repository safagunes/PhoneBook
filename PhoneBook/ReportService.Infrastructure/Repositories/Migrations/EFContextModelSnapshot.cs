// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReportService.Infrastructure.Data.EF;

#nullable disable

namespace ReportService.Infrastructure.Repositories.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("reportdb")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReportService.Domain.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("requestdate");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("reports", "reportdb");
                });

            modelBuilder.Entity("ReportService.Domain.Models.ReportDetail", b =>
                {
                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid")
                        .HasColumnName("reportid");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("integer")
                        .HasColumnName("peoplecount");

                    b.Property<int>("PhoneNumberCount")
                        .HasColumnType("integer")
                        .HasColumnName("phonenumbercount");

                    b.HasKey("ReportId");

                    b.ToTable("reportdetails", "reportdb");
                });

            modelBuilder.Entity("ReportService.Domain.Models.ReportDetail", b =>
                {
                    b.HasOne("ReportService.Domain.Models.Report", "Report")
                        .WithOne("ReportDetail")
                        .HasForeignKey("ReportService.Domain.Models.ReportDetail", "ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ReportService.Domain.Models.Report", b =>
                {
                    b.Navigation("ReportDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
